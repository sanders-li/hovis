[{"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\index.js":"1","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\reportWebVitals.js":"2","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\App\\App.js":"3","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\Map\\Map.js":"4","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\Controls\\Controls.js":"5","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\Tooltip\\Tooltip.js":"6","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\TimeSlider\\TimeSlider.js":"7","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\TimeSlider\\styles.js":"8","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Store\\Store.js":"9","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Reducers\\Reducers.js":"10","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\actions\\animationResponse.js":"11","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Reducers\\animationReducer.js":"12","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\About\\About.js":"13"},{"size":644,"mtime":1609496024161,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608108479293,"results":"16","hashOfConfig":"15"},{"size":9443,"mtime":1609896495855,"results":"17","hashOfConfig":"15"},{"size":1908,"mtime":1609287043521,"results":"18","hashOfConfig":"15"},{"size":3481,"mtime":1609894786906,"results":"19","hashOfConfig":"15"},{"size":1660,"mtime":1609898041249,"results":"20","hashOfConfig":"15"},{"size":6049,"mtime":1609837297490,"results":"21","hashOfConfig":"15"},{"size":377,"mtime":1609493824242,"results":"22","hashOfConfig":"15"},{"size":272,"mtime":1609495700516,"results":"23","hashOfConfig":"15"},{"size":224,"mtime":1609577036189,"results":"24","hashOfConfig":"15"},{"size":211,"mtime":1609576923376,"results":"25","hashOfConfig":"15"},{"size":235,"mtime":1609576987376,"results":"26","hashOfConfig":"15"},{"size":1687,"mtime":1609897840054,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qzgn74",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\index.js",[],["58","59"],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\reportWebVitals.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\App\\App.js",["60","61","62"],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\Map\\Map.js",["63","64","65","66","67"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport DeckGL from '@deck.gl/react';\r\nimport { ScatterplotLayer, LineLayer } from '@deck.gl/layers';\r\nimport { HeatmapLayer, HexagonLayer } from '@deck.gl/aggregation-layers';\r\nimport {StaticMap} from 'react-map-gl';\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nconst key = require('./keys.json').mapbox\r\n\r\n// Viewport settings\r\nconst INITIAL_VIEW_STATE = {\r\n    longitude: -95,\r\n    latitude: 37,\r\n    zoom: 4,\r\n    pitch: 0,\r\n    bearing: 0\r\n};\r\n  \r\nconst rg_gradient = (percent) => {\r\n    let percent_clamped = Math.min(Math.max(percent, 0), 1);\r\n    let r, g;\r\n    if (percent_clamped < 0.5) {\r\n        r = (percent_clamped)/0.5; g = 1;\r\n    } else if (percent_clamped > 0.5) {\r\n        r = 1; g = (percent_clamped-0.5)/0.5\r\n    } else {\r\n        r = 1; g = 1;\r\n    }\r\n    return [255 * r, 255 * g, 0]\r\n}\r\n\r\nfunction Map({ sourceData, collection_week }) {\r\n    //const [hoverInfo, setHoverInfo] = useState;\r\n    // Use useEffect instead?\r\n    /*\r\n    {hoverInfo.object && (\r\n        <div style={{left: hoverInfo.x, top: hoverInfo.y}}>\r\n            <Tooltip object={hoverInfo.object} />\r\n        </div>\r\n    )}\r\n    */\r\n\r\n    let layers = [\r\n        new ScatterplotLayer({\r\n            id: 'scatter',\r\n            data: sourceData[collection_week],\r\n            opacity: 0.8,\r\n            filled: true,\r\n            radiusMinPixels: 3,\r\n            radiusMaxPixels: 5,\r\n            getPosition: d => [d.lng, d.lat],\r\n            getFillColor: d => rg_gradient(d.inpatient_occupancy),\r\n          \r\n            pickable: true,\r\n            // onHover: info => setHoverInfo(info)\r\n        })\r\n    ];\r\n\r\n    return (\r\n        <DeckGL\r\n          initialViewState={INITIAL_VIEW_STATE}\r\n          controller={true}\r\n          layers={layers}\r\n        >\r\n          <StaticMap mapboxApiAccessToken={key} />\r\n        </DeckGL>\r\n    )\r\n}\r\n\r\nexport default Map;",["68","69"],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\Controls\\Controls.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\Tooltip\\Tooltip.js",["70","71","72","73","74","75","76","77"],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\TimeSlider\\TimeSlider.js",["78"],"import React from 'react'\r\nimport { Slider } from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {\r\n    FlexibleXYPlot,\r\n    YAxis,\r\n    VerticalGridLines,\r\n    HorizontalGridLines,\r\n    LineMarkSeriesCanvas,\r\n    LineMarkSeries,\r\n    Crosshair\r\n  } from 'react-vis';\r\nimport 'react-vis/dist/style.css';\r\nimport {styles} from './styles'\r\nimport { animationResponse } from '../../actions/animationResponse'\r\nimport './TimeSlider.css'\r\n\r\nclass TimeSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            collection_week: this.props.collection_week,\r\n            weeks: this.props.weeks,\r\n            week_idx: this.props.weeks.length-1,\r\n            max_week_idx: this.props.weeks.length-1,\r\n            stepDuration: 300,\r\n            intervalSetter: null,\r\n            isPlaying: false,\r\n            playOrPause: 'play',\r\n            value: false,\r\n        }\r\n        this._handleSliderChange = this._handleSliderChange.bind(this)\r\n        this._resetSlider = this._resetSlider.bind(this)\r\n        this._handleAnimation = this._handleAnimation.bind(this)\r\n        this._animate = this._animate.bind(this)\r\n        this._handlePlay = this._handlePlay.bind(this)\r\n        this._handlePause = this._handlePause.bind(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.intervalSetter)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.collection_week !== this.props.collection_week) {\r\n            this.setState({\r\n                collection_week: this.props.collection_week\r\n            })\r\n        }\r\n    }\r\n\r\n    _handleSliderChange(t, idx) {\r\n        this.setState({ \r\n            week_idx: idx,\r\n            collection_week: this.state.weeks[idx]\r\n        })\r\n        this.props.animationResponse('animation-value', [idx, this.state.max_week_idx])\r\n    }\r\n\r\n    _resetSlider() {\r\n        this.setState({ week_idx: 0 })\r\n        this.props.animationResponse('animation-value', [0, this.state.max_week_idx])\r\n    }\r\n\r\n    _handleAnimation() {\r\n        this.state.playOrPause === 'play' ? this._handlePlay() : this._handlePause();\r\n    }\r\n\r\n    _animate() {\r\n        if (this.state.week_idx < this.state.max_week_idx) {\r\n            this.setState({\r\n                week_idx: this.state.week_idx + 1,\r\n                isPlaying: true\r\n            }, () => {\r\n                this.props.animationResponse('animation-value', [this.state.week_idx, this.state.max_week_idx])\r\n            })\r\n        }\r\n        if (this.state.week_idx === this.state.max_week_idx) {\r\n            this._handlePause()\r\n        }\r\n    }\r\n\r\n    _handlePlay() {\r\n        this.setState({\r\n            intervalSetter: setInterval(this._animate, this.state.stepDuration),\r\n            playOrPause: 'pause'\r\n        })\r\n    }\r\n\r\n    _handlePause() {\r\n        clearInterval(this.state.intervalSetter)\r\n        this.setState({\r\n            isPlaying: false,\r\n            playOrPause: 'play'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"time-slider\">\r\n                <div className=\"controls\">\r\n                    <button onClick={this._resetSlider}>\r\n                        <i className=\"fas fa-undo\"></i>\r\n                    </button>\r\n                    <button onClick={this._handleAnimation}>\r\n                        <i className={`fas fa-${this.state.playOrPause}`}></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"slider-chart-container\">\r\n                    <div className=\"chart-container\">\r\n                        <FlexibleXYPlot\r\n                            onMouseLeave={() => this.setState({value: false})}\r\n                            yDomain={[0, 100]}\r\n                        >\r\n                            <VerticalGridLines />\r\n                            <HorizontalGridLines />\r\n                            <YAxis \r\n                                title=\"Capacity\"\r\n                            />\r\n                            <LineMarkSeries\r\n                                data={this.props.chartData}\r\n                                curve={\"curveMonotoneX\"}\r\n                                onNearestX= {d => this.setState({value: [d]})}\r\n                                animation={true}\r\n                            />\r\n                            {this.state.value && \r\n                                <Crosshair \r\n                                    values={ this.state.value }\r\n                                    titleFormat={ d => ({\r\n                                        title: 'Week',\r\n                                        value: this.state.weeks[d[0].x],\r\n                                    })} \r\n                                    itemsFormat={ d => [{\r\n                                        title: 'Capacity',\r\n                                        value: `${d[0].y}%`,\r\n                                    }]}\r\n                                />\r\n                            }\r\n                        </FlexibleXYPlot>\r\n                    </div>\r\n                    <div className=\"slider-container\">\r\n                        <Slider \r\n                            className=\"slider\"\r\n                            value={this.state.week_idx}\r\n                            onChange={this._handleSliderChange}\r\n                            min={0}\r\n                            max={this.state.max_week_idx}\r\n                            step={1}\r\n                            marks={ this.props.weeks.map((v,i) => {return {value: i, label: v}}) }\r\n                            track={false}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n    return bindActionCreators({ animationResponse: animationResponse }, dispatch)\r\n}\r\n  \r\nexport default connect(null, matchDispatchToProps)(withStyles(styles)(TimeSlider))","C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\TimeSlider\\styles.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Store\\Store.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Reducers\\Reducers.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\actions\\animationResponse.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Reducers\\animationReducer.js",[],"C:\\Users\\SandersLi\\kaggle\\ICU_corona\\hovis\\src\\Components\\About\\About.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":104,"column":73,"nodeType":"89","messageId":"90","endLine":112,"endColumn":10},{"ruleId":"91","severity":1,"message":"92","line":199,"column":13,"nodeType":"93","messageId":"94","endLine":199,"endColumn":25},{"ruleId":"83","severity":1,"message":"95","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":13},{"ruleId":"83","severity":1,"message":"96","line":4,"column":28,"nodeType":"85","messageId":"86","endLine":4,"endColumn":37},{"ruleId":"83","severity":1,"message":"97","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":22},{"ruleId":"83","severity":1,"message":"98","line":5,"column":24,"nodeType":"85","messageId":"86","endLine":5,"endColumn":36},{"ruleId":"83","severity":1,"message":"99","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":15},{"ruleId":"79","replacedBy":"100"},{"ruleId":"81","replacedBy":"101"},{"ruleId":"83","severity":1,"message":"102","line":3,"column":5,"nodeType":"85","messageId":"86","endLine":3,"endColumn":19},{"ruleId":"83","severity":1,"message":"103","line":4,"column":5,"nodeType":"85","messageId":"86","endLine":4,"endColumn":10},{"ruleId":"83","severity":1,"message":"104","line":5,"column":5,"nodeType":"85","messageId":"86","endLine":5,"endColumn":22},{"ruleId":"83","severity":1,"message":"105","line":6,"column":5,"nodeType":"85","messageId":"86","endLine":6,"endColumn":24},{"ruleId":"83","severity":1,"message":"106","line":7,"column":5,"nodeType":"85","messageId":"86","endLine":7,"endColumn":25},{"ruleId":"83","severity":1,"message":"107","line":8,"column":5,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"83","severity":1,"message":"108","line":9,"column":5,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":18,"column":5,"nodeType":"111","messageId":"112","endLine":20,"endColumn":6},{"ruleId":"83","severity":1,"message":"106","line":11,"column":5,"nodeType":"85","messageId":"86","endLine":11,"endColumn":25},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'CSSTransition' is defined but never used.","Identifier","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'hospitals'.","ArrowFunctionExpression","unsafeRefs","no-dupe-keys","Duplicate key 'getFillColor'.","ObjectExpression","unexpected","'axios' is defined but never used.","'LineLayer' is defined but never used.","'HeatmapLayer' is defined but never used.","'HexagonLayer' is defined but never used.","'Tooltip' is defined but never used.",["113"],["114"],"'FlexibleXYPlot' is defined but never used.","'YAxis' is defined but never used.","'VerticalGridLines' is defined but never used.","'HorizontalGridLines' is defined but never used.","'LineMarkSeriesCanvas' is defined but never used.","'LineMarkSeries' is defined but never used.","'Crosshair' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]